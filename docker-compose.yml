version: "3.2"

services:
  admin-client:
    build:
      context: ./admin/client/
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      # - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - ./admin/client:/var/www
    networks:
      - nodeapp-network

  admin-server:
    build:
      context: ./admin/server/
      dockerfile: Dockerfile
    # command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - PORT=5000
    ports:
      - "5000:5000"
    # working_dir: /root/admin-server
    volumes:
      - ./admin/server:/var/www # <--- This will map ./upload-processor to /root/upload-processor inside the container.
      - uploaded-files:/var/www/uploaded-files
    networks:
      - nodeapp-network

  upload-processor:
    build:
      context: ./upload-processor
      dockerfile: Dockerfile
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - PORT=8080
    ports:
      - "8080:8080"
    # command: [ "pm2-runtime", "start", "npm", "--", "start" ]
    working_dir: /root/upload-processor
    volumes:
      - ./upload-processor:/root/upload-processor:cached # <--- This will map ./upload-processor to /root/upload-processor inside the container.
      - uploaded-files:/root/upload-processor/uploaded-files
    networks:
      - nodeapp-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - nodeapp-network

  messaging:
    image: "rabbitmq:3-management"
    # environment:
    #   - RABBITMQ_DEFAULT_USER=rabbit
    #   - RABBITMQ_DEFAULT_PASS=rabbit
    volumes:
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq/rabbitmq-definitions.json:/etc/rabbitmq/rabbitmq-definitions.json
    hostname: "mappit-messaging"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - nodeapp-network

  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
    networks:
      - nodeapp-network

  db:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: "P@22word"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - type: volume
        source: dbdata
        target: /var/opt/mssql

networks:
  nodeapp-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  postgres-data:
    driver: local
  uploaded-files:
